// Offlineshops.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "winsock.h"
#include <iostream> 


unsigned char protocol_version_packet[] = {0x0B, 0x01, 0x00, 0xEA, 0x02, 0x00, 0x00, 0x09, 0x07, 0x54, 0x56, 0x03, 0x09, 0x0B, 0x01, 0x07, 0x02, 0x54, 0x54, 0x56, 0x07, 0x00, 0x02, 0x55, 0x56, 0x00, 0x51, 0x00, 0x53, 0x57, 0x04, 0x07, 0x55, 0x08, 0x54, 0x01, 0x07, 0x01, 0x53, 0x00, 0x56, 0x55, 0x56, 0x01, 0x06, 0x05, 0x04, 0x51, 0x03, 0x08, 0x51, 0x08, 0x51, 0x56, 0x04, 0x54, 0x06, 0x55, 0x08, 0x02, 0x09, 0x51, 0x56, 0x01, 0x53, 0x06, 0x55, 0x04, 0x53, 0x00, 0x56, 0x56, 0x53, 0x01, 0x09, 0x02, 0x09, 0x01, 0x51, 0x54, 0x51, 0x09, 0x55, 0x56, 0x09, 0x03, 0x04, 0x07, 0x05, 0x55, 0x04, 0x06, 0x55, 0x04, 0x06, 0x09, 0x04, 0x51, 0x01, 0x08, 0x08, 0x06, 0x05, 0x52, 0x06, 0x04, 0x01, 0x07, 0x54, 0x03, 0x06, 0x52, 0x55, 0x06, 0x55, 0x55, 0x51, 0x01, 0x02, 0x04, 0x54, 0x03, 0x55, 0x54, 0x01, 0x57, 0x51, 0x55, 0x05, 0x52, 0x05, 0x54, 0x07, 0x51, 0x51, 0x55, 0x07, 0x02, 0x53, 0x53, 0x00, 0x52, 0x05, 0x52, 0x07, 0x01, 0x54, 0x00, 0x03, 0x05, 0x05, 0x08, 0x06, 0x05, 0x05, 0x06, 0x03, 0x00, 0x0D, 0x08, 0x01, 0x07, 0x09, 0x03, 0x51, 0x03, 0x07, 0x53, 0x09, 0x51, 0x06, 0x07, 0x54, 0x0A, 0x50, 0x56, 0x02, 0x52, 0x04, 0x05, 0x55, 0x51, 0x02, 0x53, 0x00, 0x08, 0x54, 0x04, 0x52, 0x56, 0x06, 0x02, 0x09, 0x00, 0x08, 0x03, 0x53, 0x56, 0x01, 0x05, 0x00, 0x55, 0x06, 0x08, 0x56, 0x04, 0x0D, 0x06, 0x07, 0x52, 0x06, 0x07, 0x04, 0x0A, 0x06, 0x01, 0x04, 0x54, 0x04, 0x00, 0x05, 0x02, 0x04, 0x54, 0x00, 0x09, 0x52, 0x53, 0x05, 0x04, 0x01, 0x04, 0x05, 0x05, 0x01, 0x52, 0x51, 0x52, 0x0D, 0x06, 0x51, 0x08, 0x09, 0x54, 0x53, 0x00, 0x0D, 0x01, 0x02, 0x03, 0x54, 0x53, 0x01, 0x05, 0x03, 0x08, 0x56, 0x54, 0x07, 0x02, 0x54, 0x0B, 0x06, 0xDC, 0x4F, 0x61, 0x4F};

int _tmain(int argc, _TCHAR* argv[])
{

		SOCKET conn = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);

		if (conn == INVALID_SOCKET) {
			//g_Log.Add(CLog::Error, "[OfflineShopRestore] WSA Error at socket [%d]", WSAGetLastError());
			return 1;
		}

		sockaddr_in endpoint;
		endpoint.sin_family = AF_INET;
		//endpoint.ai_socktype = SOCK_STREAM;
		//endpoint.ai_protocol = IPPROTO_TCP;

		endpoint.sin_addr.s_addr = inet_addr("127.0.0.1");
		endpoint.sin_port = htons(7777); // should use l2server config value

		int res = connect(conn, (SOCKADDR *)&endpoint, sizeof(endpoint)); 
		if (res == SOCKET_ERROR) {
			closesocket(conn);
			//g_Log.Add(CLog::Error, "[OfflineShopRestore] WSA Error at connect [%d]", WSAGetLastError());
			return 1;
		}

		//g_OfflineShopRestore.AddSocket(conn);

		res = send(conn, (const char *)protocol_version_packet, sizeof(protocol_version_packet), 0);
		if (res == SOCKET_ERROR) {
			closesocket(conn);
			//g_Log.Add(CLog::Error, "[OfflineShopRestore] WSA Error at send [%d]", WSAGetLastError());
			return 1;
		}

		char recvbuf[2];
		res = recv(conn, recvbuf, 2, 0);
		if (res == 0) {
			closesocket(conn);
		}

//		cout << "Hello World!\n";
	return 0;
}
